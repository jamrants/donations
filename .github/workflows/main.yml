name: CI

# This action works with pull requests and pushes
on:
  pull_request:
  push:
    branches:
      - master
  repository_dispatch:
    types: [airtable]

jobs:
  prettier:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          # Make sure the actual branch is checked out when running on pull requests
          ref: ${{ github.head_ref }}

      - name: Prettify Code
        uses: creyD/prettier_action@v3.0
        with:
          # This part is also where you can pass other options, for example:
          prettier_options: --write **/*.{js,md}

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v1.4.2
        
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          # Make sure the actual branch is checked out when running on pull requests
          ref: ${{ github.head_ref }}
      
      - name: Extract Branch Name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract-branch
        
      - name: Extract Commit Name
        shell: bash
        run: echo "##[set-output name=commit;]$(git log -1 --pretty=%B)"
        id: extract-commit
        
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-build-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-npm-

      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm install

      - name: Build Site
        run: npm run build
        env:
          AIRTABLE_KEY: ${{ secrets.AIRTABLE_KEY }}
          BASE_ID: ${{ secrets.BASE_ID }}
          LOCATIONIQ: ${{ secrets.LOCATIONIQ }}

      - name: Deploy to Netlify
        id: netlify-deploy
        uses: nwtgck/actions-netlify@v1.1.3
        with:
          # Publish directory
          publish-dir: "./public"
          production-branch: production
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: Deploy from ${{ steps.extract-branch.outputs.branch }} | ${{ steps.extract-commit.outputs.commit }} | ${{ github.sha }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      
      - name: Run Lighthouse Tests
        run: |
          npm install -g @lhci/cli@0.4.x
          lhci autorun --upload.target=temporary-public-storage --collect.url=${{ steps.netlify-deploy.outputs.deploy-url }} || echo "LHCI failed!"
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
